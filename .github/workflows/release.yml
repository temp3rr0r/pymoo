name: Release

on:
  push:
    branches:
      - master
      - release


jobs:

  testing:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Python 3
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install numpy
          pip install -r tests/requirements.txt
      - name: Install pymoo
        run: |
          pip install .
          rm -rf pymoo
      - name: Run Tests
        run: pytest


  build:
     needs: testing
     runs-on: ${{ matrix.os }}
     strategy:
       matrix:
         os: [ubuntu-latest, windows-latest, macos-latest]
         python-version: ['3.7', '3.8', '3.9']
         exclude:
           - os: ubuntu-latest
             python-version: '3.7'
           - os: ubuntu-latest
             python-version: '3.8'
     steps:
     - uses: actions/checkout@v2
     - name: Set up Python
       uses: actions/setup-python@v2
       with:
         python-version: ${{ matrix.python-version }}
     - name: Install dependencies
       run: |
         python -m pip install --upgrade pip
         pip install setuptools wheel numpy
     - uses: knicknic/os-specific-run@v1
       with:
         linux: python setup.py sdist
         macos: python setup.py bdist_wheel
         windows: python setup.py bdist_wheel
     - uses: actions/upload-artifact@v2
       with:
         name: dist
         path: dist


  build-manylinux:
    needs: testing
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: RalfG/python-wheels-manylinux-build@v0.3.4-manylinux2010_x86_64
      with:
        python-versions: 'cp37-cp37m cp38-cp38 cp39-cp39'
        build-requirements: 'cython numpy'
        pip-wheel-args: '-w ./dist --no-deps'
    - name: Remove non-compatible packages
      run: |
        sudo rm dist/*linux_x86_64.whl
    - uses: actions/upload-artifact@v2
      with:
        name: dist
        path: dist

  deploy:
     needs: [build,build-manylinux]
     runs-on: ubuntu-latest
     steps:
     - uses: actions/checkout@v2
     - uses: actions/download-artifact@v4.1.7
       with:
         name: dist
         path: dist
     - name: Set up Python
       uses: actions/setup-python@v2
       with:
         python-version: '3.9'
     - name: Publish
       env:
         TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
         TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
       run: |
         python -m pip install --upgrade pip
         pip install twine
         twine upload --skip-existing --repository testpypi dist/*

